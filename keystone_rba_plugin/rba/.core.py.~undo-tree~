(undo-tree-save-format-version . 1)
"20b3d78035317270263bad01183e4ae79d51e992"
[nil nil nil nil (25248 20955 849905 625000) 0 nil]
([nil nil ((10488 . 10501) (t 25236 34225 251411 0)) nil (25248 20955 849903 18000) 0 nil])
([nil nil ((10507 . 10512) (10506 . 10508) (#("(" 0 1 (face (idle-highlight-in-visible-buffers font-lock-builtin-face) fontified nil)) . -10506) (10501 . 10507)) nil (25248 20955 849894 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -10488) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("            print(score)" 0 12 (fontified t) 12 17 (face font-lock-builtin-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 23 (face (idle-highlight-in-visible-buffers) fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t)) . 10489) (undo-tree-id7 . -24) (undo-tree-id8 . -23) (undo-tree-id9 . -24) (undo-tree-id10 . -24) (undo-tree-id11 . -24) (undo-tree-id12 . -24) (t 25248 20955 884063 510000)) nil (25248 21607 160452 679000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16887) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 16888 (t 25248 21607 186555 413000)) nil (25248 21981 143509 751000) 0 nil])
([nil nil ((16575 . 16577) (16574 . 16575) (16582 . 16587) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 16583) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 16583) (16581 . 16583) (#("(" 0 1 (face (idle-highlight-in-visible-buffers font-lock-builtin-face) fontified nil)) . -16581) (16581 . 16582) (16578 . 16581) (#("\"" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 16580) (16579 . 16580) (16578 . 16580) (#("\"" 0 1 (fontified nil)) . -16578) (16576 . 16579) (#("." 0 1 (fontified t)) . -16576) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 16577 (16575 . 16577) (#("\"" 0 1 (syntax-table (15) face font-lock-string-face fontified nil)) . 16575) (16574 . 16575) (16573 . 16575) (#("\"" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -16573) (16573 . 16574) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 16574) (16573 . 16574) (16572 . 16574) (#("(" 0 1 (face (idle-highlight-in-visible-buffers) fontified nil)) . -16572) (16563 . 16573) (16550 . 16563) (t 25248 21981 169814 594000)) nil (25248 22179 971908 778000) 0 nil])
([nil nil ((#("            LOG.debug(\"p_A\" + str(score))
" 0 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 24 26 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 26 27 (face font-lock-string-face fontified t) 27 30 (fontified t) 30 33 (face font-lock-builtin-face fontified t) 33 34 (face (rainbow-delimiters-depth-2-face) fontified t) 34 39 (fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t) 41 42 (fontified t)) . 16551) (undo-tree-id75 . -26) (undo-tree-id76 . -42) (undo-tree-id77 . 42) (undo-tree-id78 . -26)) nil (25248 22179 971896 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16795 . 16796) (#("
" 0 1 (fontified nil)) . -16825) (16783 . 16826) 16736) nil (25248 22179 971891 225000) 0 nil])
([nil nil ((16822 . 16833) (#("p_" 0 1 (fontified t) 1 2 (fontified t)) . -16822) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) 16824 (16822 . 16824) (#("s" 0 1 (fontified t)) . -16822) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("c" 0 1 (fontified t)) . -16823) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("o" 0 1 (fontified t)) . -16824) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("r" 0 1 (fontified t)) . -16825) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 16826 (#("e" 0 1 (face (idle-highlight-in-visible-buffers) fontified t)) . -16826) (undo-tree-id65 . -1) 16827 (16803 . 16814) (#("p_u" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 1 3 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16803) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) 16806 (16805 . 16806) (#("A" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16805) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 16806 (#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . -16792) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) 16796) nil (25248 22179 971884 351000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16680 . 16681) (#("
" 0 1 (fontified nil)) . -16710) (16668 . 16711) 16659) nil (25248 22179 971849 863000) 0 nil])
([nil nil ((16708 . 16716) (#("p_lin" 0 1 (face (idle-highlight-in-visible-buffers) fontified t) 1 5 (fontified t)) . -16708) (undo-tree-id24 . -1) (undo-tree-id25 . -5) (undo-tree-id26 . -5) 16713 (16708 . 16713) (#("s" 0 1 (fontified t)) . -16708) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("c" 0 1 (fontified t)) . -16709) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("o" 0 1 (fontified t)) . -16710) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("r" 0 1 (fontified t)) . -16711) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (face (idle-highlight-in-visible-buffers) fontified t)) . -16712) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 16713 (16692 . 16700) (#("p_lin" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 1 5 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16692) (undo-tree-id42 . -5) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -5) (undo-tree-id46 . -5) 16697 (16695 . 16697) (16694 . 16695) (#("A" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16694) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 16695) nil (25248 22179 971842 971000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16797 . 16798) (#("
" 0 1 (fontified nil)) . -16827) (16785 . 16828) 16766) nil (25248 22179 971808 436000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . -16809) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("_" 0 1 (face font-lock-string-face fontified t)) . -16810) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("A" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16811) (undo-tree-id23 . -1) 16812) nil (25248 22179 971801 888000) 0 nil])
([nil nil ((16809 . 16814)) nil (25248 22179 971771 506000) 0 nil])
([nil nil ((16910 . 16911) (16815 . 16816) (16700 . 16701) (t 25248 22180 154 146000)) nil (25248 22295 749573 735000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -16653) (16602 . 16654) 16584) nil (25248 22295 749569 422000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -16629) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -16630) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -16631) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -16632) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("r" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -16633) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 16634) nil (25248 22295 749561 541000) 0 nil])
([nil nil ((16629 . 16630)) nil (25248 22295 749530 58000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -16628) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -16629) (undo-tree-id84 . -1) 16630) nil (25248 22295 749524 972000) 0 nil])
([nil nil ((16628 . 16630)) nil (25248 22295 749495 57000) 0 nil])
([nil nil ((#("linear" 0 6 (face (idle-highlight-in-visible-buffers) fontified t)) . -16641) (undo-tree-id1322 . -6) (undo-tree-id1323 . -6) (undo-tree-id1324 . -6) (undo-tree-id1325 . -5) (undo-tree-id1326 . -6) (undo-tree-id1327 . -6) (undo-tree-id1328 . -6) 16647 (t 25248 22295 775659 754000)) nil (25248 22306 744245 175000) 0 nil])
([nil nil ((16641 . 16643)) nil (25248 22306 744234 554000) 0 nil])
([nil nil ((16643 . 16680)) nil (25248 22306 744233 24000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16676) (undo-tree-id1278 . -4) (undo-tree-id1279 . -1) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) 16680) nil (25248 22306 744228 310000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16672) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -1) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) 16676) nil (25248 22306 744182 54000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16668) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -1) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) 16672) nil (25248 22306 744105 232000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16664) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) (undo-tree-id1106 . -4) (undo-tree-id1107 . -4) (undo-tree-id1108 . -4) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -1) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) (undo-tree-id1159 . -4) 16668) nil (25248 22306 744002 658000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16660) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -1) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) 16664) nil (25248 22306 743782 873000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16656) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) (undo-tree-id903 . -4) (undo-tree-id904 . -4) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -1) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) 16660) nil (25248 22306 743687 515000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16652) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -1) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) 16656) nil (25248 22306 743544 674000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16648) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -1) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) 16652) nil (25248 22306 743298 966000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -16644) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -4) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -1) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) 16648) nil (25248 22306 743080 9000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -16643) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 16644) nil (25248 22306 742812 307000) 0 nil])
([nil nil ((17214 . 17227) (t 25248 22306 765866 996000)) nil (25248 22475 945078 546000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -17259) (17214 . 17260) 17182) nil (25248 22475 945075 832000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -17268) (undo-tree-id1361 . -4) 17272) nil (25248 22475 945072 689000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -17264) (undo-tree-id1360 . -4) 17268) nil (25248 22475 945069 422000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -17259) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (#("    " 0 4 (fontified t)) . -17260) (undo-tree-id1359 . -4) 17264) nil (25248 22475 945065 182000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -17239) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -17240) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -17241) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (#("e" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -17242) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) 17243) nil (25248 22475 945052 401000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -17238) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) 17239) nil (25248 22475 945031 530000) 0 nil])
([nil nil ((17238 . 17242)) nil (25248 22475 945024 862000) 0 nil])
([nil nil ((17239 . 17240)) nil (25248 22475 945022 777000) 0 nil])
([nil nil ((#("c" 0 1 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t)) . -17239) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) 17240) nil (25248 22475 945019 576000) 0 nil])
([nil nil ((17238 . 17239)) nil (25248 22475 945012 393000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -17252) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("c" 0 1 (fontified t)) . -17253) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#("o" 0 1 (fontified t)) . -17254) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#("r" 0 1 (fontified t)) . -17255) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("e" 0 1 (fontified t)) . -17256) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) 17257) nil (25248 22475 945006 521000) 0 nil])
([nil nil ((17252 . 17253)) nil (25248 22475 944969 291000) 0 nil])
([nil nil ((#("        LOG.debug(\"p_u_given_L \" + str(p_u_given_L))
" 0 8 (fontified t) 8 11 (fontified t) 11 12 (fontified t) 12 17 (fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 20 22 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 22 29 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 29 30 (face (idle-highlight-in-visible-buffers font-lock-string-face) fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 35 (fontified t) 35 38 (face font-lock-builtin-face fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 40 (face (idle-highlight-in-visible-buffers) fontified t) 40 49 (face (idle-highlight-in-visible-buffers) fontified t) 49 50 (face (idle-highlight-in-visible-buffers) fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t) 52 53 (fontified t)) . 16923) (undo-tree-id1392 . -26) (undo-tree-id1393 . 27) (undo-tree-id1394 . -53) (undo-tree-id1395 . -26) (undo-tree-id1396 . -26) (undo-tree-id1397 . -26) (undo-tree-id1398 . -26) 16949 (t 25248 22475 967528 808000)) nil (25248 22798 118434 751000) 0 nil])
([nil nil ((#("            LOG.debug(\"score \" + str(score))
" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t) 12 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face font-lock-string-face fontified t) 23 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 33 (fontified t) 33 36 (face font-lock-builtin-face fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 42 (fontified t) 42 43 (face (rainbow-delimiters-depth-2-face) fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) . 16830) (undo-tree-id1383 . -19) (undo-tree-id1384 . -44) (undo-tree-id1385 . -32) (undo-tree-id1386 . -19) (undo-tree-id1387 . 25) (undo-tree-id1388 . -19) (undo-tree-id1389 . -19) (undo-tree-id1390 . -45) (undo-tree-id1391 . -19) 16849) nil (25248 22798 118424 894000) 0 nil])
([nil nil ((#("            LOG.debug(\"p_linear \" + str(p_linear))
" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t) 12 15 (fontified t) 15 16 (fontified t) 16 21 (face (idle-highlight-in-visible-buffers) fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 36 (fontified t) 36 39 (face font-lock-builtin-face fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (fontified t) 41 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 51 (fontified t)) . 16712) (undo-tree-id1376 . -17) (undo-tree-id1377 . -17) (undo-tree-id1378 . -23) (undo-tree-id1379 . -30) (undo-tree-id1380 . -51) (undo-tree-id1381 . -17) (undo-tree-id1382 . -17) 16729) nil (25248 22798 118413 386000) 0 nil])
([nil nil ((#("            LOG.debug(\"p_xk \" + str(p_xk))
" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t) 12 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 32 (fontified t) 32 35 (face font-lock-builtin-face fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 37 (fontified t) 37 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t)) . 16603) (undo-tree-id1372 . -16) (undo-tree-id1373 . -42) (undo-tree-id1374 . -43) (undo-tree-id1375 . -16) 16619) nil (25248 22798 118400 229000) 0 nil])
([nil nil ((#("            LOG.debug(\"coeff \" + str(l))
" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t) 12 15 (fontified t) 15 16 (fontified t) 16 21 (face (idle-highlight-in-visible-buffers) fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 33 (fontified t) 33 36 (face font-lock-builtin-face fontified t) 36 37 (face (rainbow-delimiters-depth-2-face) fontified t) 37 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 41 (fontified t)) . 17023) (undo-tree-id1362 . -20) (undo-tree-id1363 . -20) (undo-tree-id1364 . -40) (undo-tree-id1365 . -20) (undo-tree-id1366 . 20) (undo-tree-id1367 . -20) (undo-tree-id1368 . -20) (undo-tree-id1369 . -41) (undo-tree-id1370 . -20) (undo-tree-id1371 . -20) 17043) nil (25248 22798 118388 669000) 0 nil])
([nil nil ((#("import os
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 9 (fontified t face (idle-highlight-in-visible-buffers)) 9 10 (fontified t)) . 599) (undo-tree-id7 . -10) (undo-tree-id8 . -6) (undo-tree-id9 . -6) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . 1) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) 607 (t 25248 22798 147595 203000)) nil (25248 33614 237428 164000) 0 nil])
([nil nil ((#("from cryptography.hazmat.backends import default_backend
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 17 (fontified t face (idle-highlight-in-visible-buffers)) 17 34 (fontified t) 34 40 (fontified t face font-lock-keyword-face) 40 57 (fontified t)) . 627) (undo-tree-id0 . -57) (undo-tree-id1 . -4) (undo-tree-id2 . -8) (undo-tree-id3 . -4) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -4) 635) nil (25248 33614 237411 102000) 0 nil])
([nil nil ((#("from cryptography.hazmat.primitives.twofactor.hotp import HOTP
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 17 (fontified t face (idle-highlight-in-visible-buffers)) 17 51 (fontified t) 51 57 (fontified t face font-lock-keyword-face) 57 62 (fontified t) 62 63 (fontified t)) . 627) (undo-tree-id48 . -63) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) 635 (t 25248 33614 265658 221000)) nil (25248 33637 356282 364000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (#("
" 0 1 (fontified nil)) . -755) (692 . 756) 635) nil (25248 33637 356273 463000) 0 nil])
([nil nil ((#("from cryptography.hazmat.primitives import hashes
" 0 4 (fontified t face (idle-highlight-in-visible-buffers font-lock-keyword-face)) 4 5 (fontified t) 5 17 (fontified t) 17 36 (fontified t) 36 42 (fontified t face font-lock-keyword-face) 42 50 (fontified t)) . 756) (undo-tree-id18 . -50) (undo-tree-id19 . -50) (undo-tree-id20 . -50) (undo-tree-id21 . -50) (undo-tree-id22 . -50) (undo-tree-id23 . -50) (undo-tree-id24 . -50) (undo-tree-id25 . -50) (undo-tree-id26 . -50) (undo-tree-id27 . -50) (undo-tree-id28 . -50) (undo-tree-id29 . -50) (undo-tree-id30 . -50) (undo-tree-id31 . -50) (undo-tree-id32 . -50) (undo-tree-id33 . -50) (undo-tree-id34 . -50) (undo-tree-id35 . -50) (undo-tree-id36 . -50) (undo-tree-id37 . -50) (undo-tree-id38 . -50) (undo-tree-id39 . -50) (undo-tree-id40 . -50) (undo-tree-id41 . -50) (undo-tree-id42 . -50) (undo-tree-id43 . -50) (undo-tree-id44 . -50) (undo-tree-id45 . -50) (undo-tree-id46 . -50) (undo-tree-id47 . -50)) nil (25248 33637 356266 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 626 . 627) (#("
" 0 1 (fontified nil)) . -676) (626 . 677)) nil (25248 33637 356204 326000) 0 nil])
([nil nil ((#("from keystone.common import manager
" 0 4 (fontified t face font-lock-keyword-face) 4 21 (fontified t) 21 27 (fontified t face (idle-highlight-in-visible-buffers font-lock-keyword-face)) 27 36 (fontified t)) . 960) (undo-tree-id52 . -36) (undo-tree-id53 . -27) (undo-tree-id54 . -4) (undo-tree-id55 . -36) (undo-tree-id56 . -27) (undo-tree-id57 . -27) (undo-tree-id58 . -27) (undo-tree-id59 . -27) (undo-tree-id60 . -27) (undo-tree-id61 . -27) (undo-tree-id62 . -27) (undo-tree-id63 . -27) (undo-tree-id64 . -27) (undo-tree-id65 . -27) (undo-tree-id66 . -27) (undo-tree-id67 . -27) (undo-tree-id68 . -27) (undo-tree-id69 . -27) (undo-tree-id70 . -27) (undo-tree-id71 . -27) (undo-tree-id72 . -27) (undo-tree-id73 . -27) (undo-tree-id74 . -27) (undo-tree-id75 . -27) (undo-tree-id76 . -35) (undo-tree-id77 . -35) (undo-tree-id78 . -27) (undo-tree-id79 . -27) (undo-tree-id80 . -27) (undo-tree-id81 . -27) (undo-tree-id82 . -27) (undo-tree-id83 . -27) (undo-tree-id84 . -27) (undo-tree-id85 . -27) (undo-tree-id86 . -27) (undo-tree-id87 . -27) (undo-tree-id88 . -27) (undo-tree-id89 . -35) (undo-tree-id90 . -27) (undo-tree-id91 . -27) (undo-tree-id92 . -27) (undo-tree-id93 . -27) (undo-tree-id94 . -27) (undo-tree-id95 . -27) (undo-tree-id96 . -27) (undo-tree-id97 . -27) (undo-tree-id98 . -27) (undo-tree-id99 . -27) (undo-tree-id100 . -27) (undo-tree-id101 . -27) (undo-tree-id102 . -27) (undo-tree-id103 . -27) (undo-tree-id104 . -27) (undo-tree-id105 . -27) 987 (t 25248 33637 382375 929000)) nil (25248 33691 604760 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 904 . 905) (#("
" 0 1 (fontified nil)) . -940) (904 . 941) 901) nil (25248 33691 604559 135000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -5521) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 5522 (t 25248 33691 635874 257000)) nil (25248 33709 418167 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -5977) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 5978 (t 25248 33709 445941 408000)) nil (25248 33713 318699 654000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 13599) (t 25248 33713 355956 969000)) nil (25248 33738 285218 544000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 15359) (t 25248 33738 322729 726000)) nil (25248 33748 372654 177000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -15825) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 15826 (t 25248 33748 402775 775000)) nil (25248 33752 308056 963000) 0 nil])
([nil nil ((#("from cryptography.hazmat.primitives.twofactor.hotp import HOTP
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 17 (fontified t) 17 36 (fontified t) 36 45 (fontified t face (idle-highlight-in-visible-buffers)) 45 51 (fontified t) 51 57 (fontified t face font-lock-keyword-face) 57 62 (fontified t) 62 63 (fontified t)) . 743) (undo-tree-id176 . -63) (undo-tree-id177 . -37) (undo-tree-id178 . -37) (undo-tree-id179 . -37) (undo-tree-id180 . 26) (undo-tree-id181 . -37) (undo-tree-id182 . -37) 780 (t 25248 33752 339460 917000)) nil (25248 33881 890735 436000) 0 nil])
([nil nil ((nil rear-nonsticky nil 676 . 677) (#("
" 0 1 (fontified nil)) . -739) (676 . 740) 627) nil (25248 33881 890720 645000) 0 nil])
([nil nil ((#("from keystone import exception
" 0 4 (fontified t face (idle-highlight-in-visible-buffers font-lock-keyword-face)) 4 14 (fontified t) 14 20 (fontified t face font-lock-keyword-face) 20 21 (fontified t) 21 30 (fontified t) 30 31 (rear-nonsticky t fontified t)) . 874) (undo-tree-id157 . -31) (undo-tree-id158 . -4) (undo-tree-id159 . -31) (undo-tree-id160 . -31) (undo-tree-id161 . -31) (undo-tree-id162 . -31) (undo-tree-id163 . -31) (undo-tree-id164 . -31) (undo-tree-id165 . -31) (undo-tree-id166 . -31) (undo-tree-id167 . -31) (undo-tree-id168 . -31) (undo-tree-id169 . -31) (undo-tree-id170 . -30) (undo-tree-id171 . -30) (undo-tree-id172 . -30) (undo-tree-id173 . -30) (undo-tree-id174 . -30) (undo-tree-id175 . -30)) nil (25248 33881 890714 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (#("
" 0 1 (rear-nonsticky t fontified nil)) . -1036) (1005 . 1037) 965) nil (25248 33881 890666 171000) 0 nil])
([nil nil ((1489 . 1494) (t 25248 33881 940209 242000)) nil (25248 33943 233358 640000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -1493) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) 1494 (t 25248 33943 257313 564000)) nil (25248 33953 682629 932000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -1490) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1491) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1492) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 1493) nil (25248 33953 682528 755000) 0 nil])
([nil nil ((1378 . 1379) (t 25248 33953 744059 785000)) nil (25248 34041 154435 334000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face (idle-highlight-in-visible-buffers font-lock-doc-face))) . -1378) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) 1379) nil (25248 34041 154433 424000) 0 nil])
([nil nil ((1378 . 1383)) nil (25248 34041 154428 864000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-doc-face)) . -1459) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1460) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1461) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1462) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1463) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) 1464) nil (25248 34041 154400 43000) 0 nil])
([nil nil ((1459 . 1460)) nil (25248 34041 153857 889000) 0 nil])
([nil nil ((1460 . 1464) (#(" " 0 1 (fontified nil face font-lock-doc-face)) . 1459) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (1460 . 1461) (t 25248 34041 181437 994000)) nil (25248 34048 763641 55000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -1460) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1461) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1462) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -1463) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) 1464) nil (25248 34048 763628 710000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 1379) (undo-tree-id847 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 1379) (undo-tree-id848 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 1379) (undo-tree-id849 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 1379) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (t 25248 34048 798170 450000)) nil (25248 34054 77515 908000) 0 nil])
([nil nil ((5571 . 5572) (t 25248 34054 108216 654000)) nil (25248 34110 17019 624000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#(" " 0 1 (fontified t face font-lock-doc-face)) . 5572) (#("
" 0 1 (fontified t face font-lock-doc-face)) . 5572) (undo-tree-id877 . -1)) nil (25248 34110 17015 639000) 0 nil])
([nil nil ((5572 . 5580) (#(" " 0 1 (fontified nil face font-lock-doc-face)) . 5571) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (5572 . 5573)) nil (25248 34110 17009 918000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -5576) (undo-tree-id870 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5577) (undo-tree-id871 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5578) (undo-tree-id872 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5579) (undo-tree-id873 . -1) 5580) nil (25248 34110 17002 449000) 0 nil])
([nil current ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -5572) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5573) (undo-tree-id867 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5574) (undo-tree-id868 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -5575) (undo-tree-id869 . -1) 5576) nil (25248 34110 16987 884000) 0 nil])
nil
